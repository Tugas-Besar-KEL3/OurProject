/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import database.medikacomDatabase;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MY PC
 */
public class MainViewNilai extends javax.swing.JFrame {

    /**
     * Creates new form MainViewNilai
     */
    public MainViewNilai() {
        initComponents();
        datatable();
        tampil_comboNis();
        tampil_comboKode_mapel();
    }

    public void datatable() {
        DefaultTableModel tbl = new DefaultTableModel();
        tbl.addColumn("NIS");
        tbl.addColumn("Kode Mapel");
        tbl.addColumn("UTS");
        tbl.addColumn("UAS");
        tblNilai.setModel(tbl);
        try {
            Statement statement = (Statement) medikacomDatabase.getConnection().createStatement();
            ResultSet res = statement.executeQuery("select*from data_nilai");
            while (res.next()) {
                tbl.addRow(new Object[]{
                    res.getString("nis"),
                    res.getString("kodemapel"),
                    res.getString("uts"),
                    res.getString("uas")
                });
                tblNilai.setModel(tbl);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "salah");
        }
    }

    public void tampil_comboNis() {
        try {
            Connection con = medikacomDatabase.getConnection();
            Statement stt = con.createStatement();
            String sql = "select nis from data_siswa order by nis asc";
            ResultSet res = stt.executeQuery(sql);

            while (res.next()) {
                Object[] ob = new Object[3];
                ob[0] = res.getString(1);

                comboboxNis.addItem((String) ob[0]);
            }
            res.close();
            stt.close();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    public void tampil_comboKode_mapel() {
        try {
            Connection con = medikacomDatabase.getConnection();
            Statement stt = con.createStatement();
            String sql = "select kodemapel from data_mapel order by kodemapel asc";
            ResultSet res = stt.executeQuery(sql);

            while (res.next()) {
                Object[] ob = new Object[3];
                ob[0] = res.getString(1);

                comboboxKodeMapel.addItem((String) ob[0]);
            }
            res.close();
            stt.close();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DataNilai = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblNilai = new javax.swing.JTable();
        txtNilaiUts = new javax.swing.JTextField();
        txtNilaiUas = new javax.swing.JTextField();
        btnTambah = new javax.swing.JButton();
        comboboxNis = new javax.swing.JComboBox<>();
        comboboxKodeMapel = new javax.swing.JComboBox<>();
        btnLihat = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnKembali = new javax.swing.JButton();
        btnUbah1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        DataNilai.setBackground(new java.awt.Color(0, 153, 0));

        jLabel10.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(204, 204, 0));
        jLabel10.setText("PENGOLAHAN DATA NILAI");

        jLabel11.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(204, 204, 0));
        jLabel11.setText("Nomor Induk Siswa");

        jLabel13.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(204, 204, 0));
        jLabel13.setText("Kode Mata Pelajaran");

        jLabel16.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(204, 204, 0));
        jLabel16.setText("UTS ");

        jLabel17.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(204, 204, 0));
        jLabel17.setText("UAS ");

        tblNilai.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblNilai.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNilaiMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblNilai);

        btnTambah.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        btnTambah.setText("Tambah Data");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        comboboxNis.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Pilih NIS-" }));
        comboboxNis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboboxNisActionPerformed(evt);
            }
        });

        comboboxKodeMapel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Pilih Kode Mapel-" }));
        comboboxKodeMapel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboboxKodeMapelActionPerformed(evt);
            }
        });

        btnLihat.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        btnLihat.setText("Lihat Data");
        btnLihat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLihatActionPerformed(evt);
            }
        });

        btnHapus.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        btnHapus.setText("Hapus Data");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnReset.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        btnReset.setText("Reset Data");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnKembali.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        btnKembali.setText("Kembali");
        btnKembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKembaliActionPerformed(evt);
            }
        });

        btnUbah1.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        btnUbah1.setText("Ubah Data");
        btnUbah1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbah1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DataNilaiLayout = new javax.swing.GroupLayout(DataNilai);
        DataNilai.setLayout(DataNilaiLayout);
        DataNilaiLayout.setHorizontalGroup(
            DataNilaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DataNilaiLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DataNilaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(DataNilaiLayout.createSequentialGroup()
                        .addGroup(DataNilaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(DataNilaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(DataNilaiLayout.createSequentialGroup()
                                    .addComponent(jLabel11)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(comboboxNis, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(DataNilaiLayout.createSequentialGroup()
                                    .addComponent(jLabel13)
                                    .addGap(18, 18, 18)
                                    .addComponent(comboboxKodeMapel, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(1, 1, 1))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, DataNilaiLayout.createSequentialGroup()
                                    .addGroup(DataNilaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel16)
                                        .addComponent(jLabel17))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(DataNilaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtNilaiUas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtNilaiUts, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel10)
                            .addGroup(DataNilaiLayout.createSequentialGroup()
                                .addComponent(btnTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnLihat, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnUbah1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnKembali, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        DataNilaiLayout.setVerticalGroup(
            DataNilaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DataNilaiLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(DataNilaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(comboboxNis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DataNilaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(comboboxKodeMapel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DataNilaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNilaiUts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DataNilaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(txtNilaiUas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DataNilaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DataNilaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnLihat)
                        .addComponent(btnHapus)
                        .addComponent(btnReset)
                        .addComponent(btnKembali))
                    .addGroup(DataNilaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnTambah)
                        .addComponent(btnUbah1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 773, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(DataNilai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(DataNilai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        // TODO add your handling code here:
        Integer nis = Integer.parseInt(comboboxNis.getSelectedItem().toString());
        String kodemapel = comboboxKodeMapel.getSelectedItem().toString();
        Integer uts = Integer.parseInt(txtNilaiUts.getText());
        Integer uas = Integer.parseInt(txtNilaiUas.getText());
        try {
            Statement statement = (Statement) medikacomDatabase.getConnection().createStatement();
            statement.executeUpdate("insert into data_nilai values ('" + nis + "','" + kodemapel + "','" + uts + "','" + uas + "');");
            statement.close();
            JOptionPane.showMessageDialog(null, "Data berhasil disimpan!");
        } catch (Throwable throwable) {
            JOptionPane.showMessageDialog(null, new Object[]{
                "Terjadi error di database dengan pesan ", throwable.getMessage()});
        }

    }//GEN-LAST:event_btnTambahActionPerformed

    private void comboboxNisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboboxNisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboboxNisActionPerformed

    private void comboboxKodeMapelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboboxKodeMapelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboboxKodeMapelActionPerformed

    private void btnLihatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLihatActionPerformed
        // TODO add your handling code here:
        try {
            Object[] rows = {"NIS", "Kode Mapel", "UTS", "UAS"};
            DefaultTableModel dtm = new DefaultTableModel(null, rows);
            tblNilai.setModel(dtm);
            tblNilai.setBorder(null);
            jScrollPane3.setVisible(true);
            jScrollPane3.setViewportView(tblNilai);
            int nis = 1;
            String kodemapel = "", uts = "", uas = "";
            try {
                String sql = "select * from data_nilai";
                Connection conn = medikacomDatabase.getConnection();
                Statement st = conn.createStatement();
                ResultSet rs = st.executeQuery(sql);
                while (rs.next()) {
                    nis = rs.getInt("nis");
                    kodemapel = rs.getString("kodemapel");
                    uts = rs.getString("uts");
                    uas = rs.getString("uas");

                    String[] tampil = {"" + nis++, kodemapel, uts, uas};
                    dtm.addRow(tampil);
                }
            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Query Salah " + e);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnLihatActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:
        int ok = JOptionPane.showConfirmDialog(null, "Apakah anda yakin akan menghapus data ini?", "Confirmation", JOptionPane.YES_NO_OPTION);
        if (ok == 0) {
            try {
                String sql = "delete from data_nilai where nis='" + comboboxNis.getSelectedItem().toString() + "'";
                Connection conn = medikacomDatabase.getConnection();
                PreparedStatement st = conn.prepareStatement(sql);
                st.executeUpdate();
                JOptionPane.showMessageDialog(null, "Hapus data sukses!");
            } catch (Throwable throwable) {
                JOptionPane.showMessageDialog(null, new Object[]{
                    "Terjadi error di database dengan pesan ", throwable.getMessage()});
            }
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        txtNilaiUts.setText("");
        txtNilaiUas.setText("");
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnKembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKembaliActionPerformed
        // TODO add your handling code here:
        HomeView HV = new HomeView();
        HV.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnKembaliActionPerformed

    private void btnUbah1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbah1ActionPerformed
        // TODO add your handling code here:
        int ok = JOptionPane.showConfirmDialog(null, "Apakah anda yakin akan mengupdate data ini?", "Confirmation", JOptionPane.YES_NO_OPTION);
        try {
            String sql = "update data_nilai set nis=?, kodemapel=?, uts=?, uas=? where nis='" + comboboxNis.getSelectedItem().toString() + "'";
            Connection conn = medikacomDatabase.getConnection();
            PreparedStatement st = conn.prepareStatement(sql);
            if (ok == 0) {
                try {
                    st.setString(1, comboboxNis.getSelectedItem().toString());
                    st.setString(2, comboboxKodeMapel.getSelectedItem().toString());
                    st.setString(3, txtNilaiUts.getText());
                    st.setString(4, txtNilaiUas.getText());
                    st.executeUpdate();

                    JOptionPane.showMessageDialog(null, "Update data sukses!");
                } catch (Throwable throwable) {
                    JOptionPane.showMessageDialog(null, new Object[]{
                        "Terjadi error di database dengan pesan ", throwable.getMessage()});
                }
            }
        } catch (Exception e) {

        }
    }//GEN-LAST:event_btnUbah1ActionPerformed

    private void tblNilaiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNilaiMouseClicked
        // TODO add your handling code here:
        comboboxNis.setSelectedItem(tblNilai.getValueAt(tblNilai.getSelectedRow(), 0).toString());
        comboboxKodeMapel.setSelectedItem(tblNilai.getValueAt(tblNilai.getSelectedRow(), 1).toString());
        txtNilaiUts.setText(tblNilai.getValueAt(tblNilai.getSelectedRow(), 2).toString());
        txtNilaiUas.setText(tblNilai.getValueAt(tblNilai.getSelectedRow(), 3).toString());
    }//GEN-LAST:event_tblNilaiMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainViewNilai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainViewNilai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainViewNilai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainViewNilai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainViewNilai().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel DataNilai;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnKembali;
    private javax.swing.JButton btnLihat;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnTambah;
    private javax.swing.JButton btnUbah1;
    private javax.swing.JComboBox<String> comboboxKodeMapel;
    private javax.swing.JComboBox<String> comboboxNis;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblNilai;
    private javax.swing.JTextField txtNilaiUas;
    private javax.swing.JTextField txtNilaiUts;
    // End of variables declaration//GEN-END:variables
}
